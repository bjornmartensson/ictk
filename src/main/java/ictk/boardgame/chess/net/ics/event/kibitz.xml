<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
 * ictk - Internet Chess ToolKit
 * More information is available at http://jvarsoke.github.io/ictk
 * Copyright (c) 1997-2014 J. Varsoke <ictk.jvarsoke [at] neverbox.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
-->
<!DOCTYPE icsevtml SYSTEM "icsevtml.dtd" [
   <!ENTITY common SYSTEM "parserCommon.xml">
   ]>

<icsevtml>
   <!-- kibitz ............................................................-->
   <event id="kibitz" 
          class="Kibitz"
	  enum="KIBITZ"
	  extends="ICSMessageEvent">

      <description>
         This cooresponds to Kibitz, Whisper, and Board Say messages.
         The EventType tells which one it is.
      </description>

      <implements idref="board"/>

      <member id="kibitz:player"      typeref="player"/>
      <member id="kibitz:accountType" typeref="accountType"/>
      <member id="kibitz:rating"      typeref="rating"/>
      <member id="kibitz:boardNumber" typeref="boardNumber" inherit="method"/>
      <member id="kibitz:message"     typeref="message"     inherit="both"/>

      <!--parser-->
      <parser id="kibitz:parser"
              name="Kibitz"
              protocol="FICS"
              extends="ICSEventParser"
	      detectFake="yes">

         <!-- regex -->
	 <regex>
	    <regexref ref="regex:fics:player"/>
	    <regexref ref="regex:fics:accountType"/>
	    (?:<regexref ref="regex:fics:rating"/>)?
	    \[(\d+)\]
	    \s(kibitzes|whispers|says):\s
	    <regexref ref="regex:fics:message"/>
	 </regex>

         <!-- assignMatches -->
	 <assignMatches format="java">
	    <regexgroup num="2" memberref="kibitz:player"/>
	    <regexgroup num="3" memberref="kibitz:accountType"/>
	    <regexgroup num="4" memberref="kibitz:rating"/>
	    <regexgroup num="5" memberref="kibitz:boardNumber"/>
	    <regexgroup num="7" memberref="kibitz:message"/>
      if ("whispers".equals(m.group(6))) {
         evt.setEventType(ICSEvent.WHISPER_EVENT);
      }
      else if ("says".equals(m.group(6))) {
         evt.setEventType(ICSEvent.BOARD_SAY_EVENT);
      }
	 </assignMatches>

         <!-- toNative -->
         <toNative avgLength="20">
	    <code format="java">
      String str = null;

      sb.append(evt.getPlayer())
        .append(evt.getAccountType());

      if (evt.getEventType() != ICSEvent.BOARD_SAY_EVENT) {
         sb.append("(");
	 str = evt.getRating().toString();
	 for (int i=0; i &lt; (4 - str.length()); i++)
	   sb.append(" ");
	 sb.append(str);
	 sb.append(")");
      }

      sb.append("[")
        .append(evt.getBoardNumber())
        .append("]");

      switch (evt.getEventType()) {
         case ICSEvent.KIBITZ_EVENT:
            sb.append(" kibitzes: ");
            break;

         case ICSEvent.WHISPER_EVENT:
            sb.append(" whispers: ");
            break;

         case ICSEvent.BOARD_SAY_EVENT:
            sb.append(" says: ");
            break;
      }

      sb.append(evt.getMessage());
	    </code>

	 </toNative>
      </parser>
   </event>
   &common;
</icsevtml>
