<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
 * ictk - Internet Chess ToolKit
 * More information is available at http://jvarsoke.github.io/ictk
 * Copyright (c) 1997-2014 J. Varsoke <ictk.jvarsoke [at] neverbox.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
-->
<!DOCTYPE icsevtml SYSTEM "icsevtml.dtd" [
   <!ENTITY common SYSTEM "parserCommon.xml">
   ]>

<icsevtml>
   <!-- channel............................................................-->
   <event id="seekRemove" 
          class="SeekRemove"
	  enum="SEEK_REMOVE"
	  >

      <description>
         This message from the server indicates that a number of
	 seek ads should be cleared from the client's records.  The server
	 does not keep track of which seeks you know about though.
      </description>

      <member id="seekRemove:ads"	typeref="int[]"
              varname="ads"
	      functname="Ads"
	      />

      <!--pin parser-->
      <parser id="seekRemove:parser"
              name="SeekRemove"
              protocol="FICS"
              extends="ICSEventParser"
	      detectFake="no">

         <!-- regex -->
	 <regex>
	    &lt;sr>
	    ((?:\s\d+)+) <!-- multiple numbers to remove -->
	 </regex>

         <!-- assignMatches -->
	 <assignMatches format="java">
      StringTokenizer st = new StringTokenizer(m.group(2));

      int[] ads = new int[st.countTokens()];
      int i = 0;
      try {
         while (st.hasMoreTokens()) {
	    ads[i] = Integer.parseInt(st.nextToken());
	    i++;
	 }
      }
      catch (NumberFormatException e) {
         Log.error(Log.PROG_WARNING,
            "Can't parse ads[" + i + "] "
            + "of " + m.group(0));
         evt.setEventType(ICSEvent.UNKNOWN_EVENT);
         evt.setMessage(m.group(0));
         if (Log.debug)
            Log.debug(ICSEventParser.DEBUG, "regex", m);
         return;
      }
      evt.setAds(ads);
	 </assignMatches>

         <!-- toNative -->
         <toNative avgLength="5">
	    <code format="java">
      int[] ads = evt.getAds();
      sb.append("&lt;sr>");
      for (int i=0; i &lt; ads.length; i++)
         sb.append(" ")
	   .append(ads[i]);
	    </code>
	 </toNative>
      </parser>
   </event>
   &common;
</icsevtml>
