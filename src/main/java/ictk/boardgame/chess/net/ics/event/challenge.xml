<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
 * ictk - Internet Chess ToolKit
 * More information is available at http://jvarsoke.github.io/ictk
 * Copyright (c) 1997-2014 J. Varsoke <ictk.jvarsoke [at] neverbox.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
-->
<!DOCTYPE ictkml SYSTEM "icsevtml.dtd" [
   <!ENTITY common SYSTEM "parserCommon.xml">
   ]>

<icsevtml>
   <!-- challenge event....................................................-->
   <event id="challenge" 
          class="Challenge"
	  enum="CHALLENGE">

      <description>
         The is notification that someone has challenged you to a game.  Usually
	 this event is the result of someome issuing the "match" command against
	 you.
      </description>

      <member id="challenge:challenger"		typeref="player"
              varname="challenger"
	      functname="Challenger"
              />
      <member id="challenge:challengerRating"	typeref="rating"
              varname="challengerRating"
	      functname="ChallengerRating"
              />
      <member id="challenge:iscolor"		typeref="boolean"
              varname="isColorSpecified"
	      functname="ColorSpecified"
	      />
      <member id="challenge:iswhite"		typeref="boolean"
              varname="isWhite"
	      functname="White"
	      />
      <member id="challenge:challenged"		typeref="player"
              varname="challenged"
	      functname="Challenged"
              />
      <member id="challenge:challengedRating"	typeref="rating"
              varname="challengedRating"
	      functname="ChallengedRating"
	      />
      <member id="challenge:rated"		typeref="boolean"
              varname="rated"
	      functname="Rated"
	      />
      <member id="challenge:variant"		typeref="variant"/>
      <member id="challenge:time"		typeref="int"
              varname="time"
	      functname="InitialTime"
	      />
      <member id="challenge:incr"		typeref="int"
              varname="incr"
	      functname="IncrementTime"
	      />
      <member id="challenge:computer"		typeref="boolean"
              varname="computer"
	      functname="Computer"
	      />
      <member id="challenge:abuser"		typeref="boolean"
              varname="abuser"
	      functname="Abuser"
	      />

      <!--parser-->
      <parser id="challenge:parser"
              name="Challenge"
              protocol="FICS"
              extends="ICSEventParser"
	      detectFake="yes">

         <!-- regex -->
<!--
Challenge: CyberTick (2000) TibetianTick (1671) unrated standard 999 999.
You can "accept" or "decline", or propose different parameters.

Challenge: CyberTick (2000) [white] TibetianTick (1671) unrated standard 999 999.
You can "accept" or "decline", or propose different parameters.
-->
	 <regex>
	    Challenge:\s
	    <regexref ref="regex:fics:player"/> <!--challenger-->
	    \s
	    <regexref ref="regex:fics:rating"/> <!--rating-->
	    \s(?:\[(white|black)\])?            <!--color specified-->
	    \s?
	    <regexref ref="regex:fics:player"/> <!--challenged-->
	    \s
	    <regexref ref="regex:fics:rating"/> <!--rating-->
            \s
            (rated|unrated)                     <!-- rated? -->
	    \s
	    <regexref ref="regex:fics:variant"/> <!--variant-->
	    \s
	    (\d+)				<!-- init time-->
	    \s
	    (\d+)				<!-- incr time-->
	    \.\n
	    (?:--\*\*\s
	    <regexref ref="regex:fics:player"/>
	    \sis\san?\s(computer|abuser)\s\*\*--\n)?  <!-- computer/abuser account -->
	    You\scan\s"accept"\sor\s"decline",\sor\spropose\sdifferent\sparameters\.
	 </regex>

         <!-- assignMatches -->
	 <assignMatches format="java">
	    <regexgroup num="2" memberref="challenge:challenger"/>
	    <regexgroup num="3" memberref="challenge:challengerRating"/>
	    <regexgroup num="5" memberref="challenge:challenged"/>
	    <regexgroup num="6" memberref="challenge:challengedRating"/>
	    <regexgroup num="8" memberref="challenge:variant"/>
	    <regexgroup num="9" memberref="challenge:time"/>
	    <regexgroup num="10" memberref="challenge:incr"/>
      if (m.group(4) != null) {
         evt.setColorSpecified(true);
	 if (m.group(4).equals("white"))
	    evt.setWhite(true);
      }
	 
      evt.setRated("rated".equals(m.group(7)));

      //probably more than just "computer" here, but need to see it.
      if (m.group(12) != null) {
         if ("computer".equals(m.group(12)))
            evt.setComputer(true);
	 else if ("abuser".equals(m.group(12)))
	    evt.setAbuser(true);
	 else 
	    Log.error(Log.PROG_WARNING,
	       "unknown Challenge event alert: " + m.group(12));
      }
	 </assignMatches>

         <!-- toNative -->
<!--
Challenge: CyberTick (2000) [white] TibetianTick (1671) unrated standard 999 999.
You can "accept" or "decline", or propose different parameters.
-->
         <toNative avgLength="154">
	    <code format="java">
      sb.append("Challenge: ")
        .append(evt.getChallenger())
	.append(" (")
	.append(evt.getChallengerRating())
	.append(") ");

      if (evt.isColorSpecified()) {
         if (evt.isWhite())
            sb.append("[white] ");
	 else
            sb.append("[black] ");
      }

      sb.append(evt.getChallenged())
	.append(" (")
	.append(evt.getChallengedRating())
	.append(") ");


      if (evt.isRated())
         sb.append("rated ");
      else
         sb.append("unrated ");

      sb.append(evt.getVariant())
        .append(" ")
	.append(evt.getInitialTime())
	.append(" ")
	.append(evt.getIncrementTime())
	.append(".\n");

      if (evt.isComputer()) {
         sb.append("--** ")
	   .append(evt.getChallenger())
	   .append(" is a computer **--\n");
      }

      if (evt.isAbuser()) {
         sb.append("--** ")
	   .append(evt.getChallenger())
	   .append(" is an abuser **--\n");
      }
      
      sb.append(
         "You can \"accept\" or \"decline\", or propose different parameters.");
	    </code>
	 </toNative>
      </parser>
   </event>
   &common;
</icsevtml>
