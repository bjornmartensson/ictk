<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--
 * ictk - Internet Chess ToolKit
 * More information is available at http://jvarsoke.github.io/ictk
 * Copyright (c) 1997-2014 J. Varsoke <ictk.jvarsoke [at] neverbox.com>
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
-->
<!DOCTYPE icsevtml SYSTEM "icsevtml.dtd" [
   <!ENTITY common SYSTEM "parserCommon.xml">
   ]>

<icsevtml>
   <!-- channel............................................................-->
   <event id="pcon" 
          class="PlayerConnection"
	  enum="PLAYER_CONNECTION"
	  >

      <description>
         This coorisponds to Player connection notification, either by
	 "pin=1" or someone on your Notify list.
      </description>

      <member id="pcon:player"      typeref="player"/>
      <member id="pcon:accountType" typeref="accountType"/>
      <member id="pcon:connected"   typeref="boolean"
              varname="connected"
	      functname="Connected"
              />
      <member id="pcon:notified"   typeref="boolean"
              varname="notified"
	      functname="Notification"
              />
      <member id="pcon:onNotifyList"   typeref="boolean"
              varname="onNotifyList"
	      functname="OnNotifyList"
              />


      <!--pin parser-->
      <parser id="pcon:pinparser"
              name="PlayerConnection"
              protocol="FICS"
              extends="ICSEventParser"
	      detectFake="no">

         <!-- regex -->
	 <regex>
	    \[
	    <regexref ref="regex:fics:player"/>
	    \shas\s
	    (connected|disconnected)
	    \.\]
	 </regex>

         <!-- assignMatches -->
	 <assignMatches format="java">
	    <regexgroup num="2" memberref="pcon:player"/>
      evt.setConnected("connected".equals(m.group(3)));
      evt.setNotification(false);
	 </assignMatches>

         <!-- toNative -->
         <toNative avgLength="50">
	    <code format="java">
      sb.append("[")
        .append(evt.getPlayer())
        .append(" has ");
      if (evt.isConnected())
         sb.append("connected");
      else
         sb.append("disconnected");
      sb.append(".]");
	    </code>
	 </toNative>
      </parser>

      <!--notification parser-->
      <parser id="pcon:notifcationparser"
              name="PlayerNotification"
	      enum="PLAYER_NOTIFICATION"
              protocol="FICS"
              extends="ICSEventParser"
	      detectFake="yes">

         <!-- regex -->
	 <regex>
	    Notification:\s
	    <regexref ref="regex:fics:player"/>
	    <regexref ref="regex:fics:accountType"/>
	    \shas\s
	    (arrived|departed)
	    (\sand\sisn't\son\syour\snotify\slist)?
	    \.
	 </regex>

         <!-- assignMatches -->
	 <assignMatches format="java">
	    <regexgroup num="2" memberref="pcon:player"/>
	    <regexgroup num="3" memberref="pcon:accountType"/>
      evt.setConnected("arrived".equals(m.group(4)));
      evt.setNotification(true);
      evt.setOnNotifyList(m.group(5) != null);
      evt.setEventType(ICSEvent.PLAYER_NOTIFICATION_EVENT);
	 </assignMatches>

         <!-- toNative -->
         <toNative avgLength="40">
	    <code format="java">
      sb.append("Notification: ")
        .append(evt.getPlayer())
        .append(evt.getAccountType())
        .append(" has ");

      if (evt.isConnected())
         sb.append("arrived");
      else
         sb.append("departed");

      if (evt.isOnNotifyList())
         sb.append(" and isn't on your notify list");

      sb.append(".");
	    </code>
	 </toNative>
      </parser>
   </event>
   &common;
</icsevtml>
